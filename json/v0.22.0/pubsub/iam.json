[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2014 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2014 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "pubsub/iam",
        "html": "<p>pubsub/iam</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';\n\nvar is = require('is');\nvar arrify = require('arrify');",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:pubsub} pubsub - PubSub Object",
        "name": "pubsub",
        "description": "<ul>\n<li>PubSub Object</li>\n</ul>\n",
        "types": [
          "module:pubsub"
        ],
        "typesDescription": "module:<a href=\"module%3Apubsub.html\">pubsub</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} resource - topic or subscription name",
        "name": "resource",
        "description": "<ul>\n<li>topic or subscription name</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 26,
    "codeStart": 31
  },
  {
    "tags": [
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "alias",
        "string": "module:pubsub/iam ",
        "html": "<p>module:pubsub/iam </p>"
      },
      {
        "type": "resource",
        "string": "[Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}",
        "html": "<p>[Access Control Overview]{@link <a href=\"https://cloud.google.com/pubsub/access_control}\">https://cloud.google.com/pubsub/access_control}</a></p>"
      },
      {
        "type": "resource",
        "string": "[What is Cloud IAM?]{@link https://cloud.google.com/iam/} ",
        "html": "<p>[What is Cloud IAM?]{@link <a href=\"https://cloud.google.com/iam/}\">https://cloud.google.com/iam/}</a> </p>"
      },
      {
        "type": "example",
        "string": "var pubsub = gcloud.pubsub({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar topic = pubsub.topic('my-topic');\n// topic.iam\n\nvar subscription = pubsub.subscription('my-subscription');\n// subscription.iam",
        "html": "<p>var pubsub = gcloud.pubsub({<br />  projectId: &#39;grape-spaceship-123&#39;,<br />  keyFilename: &#39;/path/to/keyfile.json&#39;<br />});</p><p>var topic = pubsub.topic(&#39;my-topic&#39;);<br />// topic.iam</p><p>var subscription = pubsub.subscription(&#39;my-subscription&#39;);<br />// subscription.iam</p>"
      }
    ],
    "description": {
      "full": "<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider range<br />of roles: editor, owner, publisher, subscriber, and viewer. This gives you<br />greater flexibility and allows you to set more fine-grained access control.</p><p>For example:</p><ul>\n<li>Grant access on a per-topic or per-subscription basis, rather than for<br />the whole Cloud project.</li>\n<li>Grant access with limited capabilities, such as to only publish messages<br />to a topic, or to only to consume messages from a subscription, but not<br />to delete the topic or subscription.</li>\n</ul>\n<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by any<br />SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>",
      "summary": "<p><a href=\"https://cloud.google.com/pubsub/access_control\">IAM (Identity and Access Management)</a><br />allows you to set permissions on invidual resources and offers a wider range<br />of roles: editor, owner, publisher, subscriber, and viewer. This gives you<br />greater flexibility and allows you to set more fine-grained access control.</p>",
      "body": "<p>For example:</p><ul>\n<li>Grant access on a per-topic or per-subscription basis, rather than for<br />the whole Cloud project.</li>\n<li>Grant access with limited capabilities, such as to only publish messages<br />to a topic, or to only to consume messages from a subscription, but not<br />to delete the topic or subscription.</li>\n</ul>\n<p><em>The IAM access control features described in this document are Beta,<br />including the API methods to get and set IAM policies, and to test IAM<br />permissions. Google Cloud Pub/Sub&#39;s use of IAM features is not covered by any<br />SLA or deprecation policy, and may be subject to backward-incompatible<br />changes.</em></p>"
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 69,
    "code": "function IAM(pubsub, resource) {\n  this.resource = resource;\n  this.makeReq_ = pubsub.makeReq_.bind(pubsub);\n}",
    "ctx": {
      "type": "constructor",
      "name": "IAM",
      "string": "IAM()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.policy - The [policy](https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy).",
        "name": "callback.policy",
        "description": "<ul>\n<li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "alias",
        "string": "iam.getPolicy ",
        "html": "<p>iam.getPolicy </p>"
      },
      {
        "type": "resource",
        "string": "[Topics: getIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}",
        "html": "<p>[Topics: getIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/getIamPolicy}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Subscriptions: getIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy} ",
        "html": "<p>[Subscriptions: getIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/getIamPolicy}</a> </p>"
      },
      {
        "type": "example",
        "string": "topic.iam.getPolicy(function(err, policy, apiResponse) {});\n\nsubscription.iam.getPolicy(function(err, policy, apiResponse) {});",
        "html": "<p>topic.iam.getPolicy(function(err, policy, apiResponse) {});</p><p>subscription.iam.getPolicy(function(err, policy, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the IAM policy</p>",
      "summary": "<p>Get the IAM policy</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 74,
    "codeStart": 92,
    "code": "IAM.prototype.getPolicy = function(callback) {\n  var path = this.resource + ':getIamPolicy';\n\n  this.makeReq_('GET', path, null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, resp, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "IAM",
      "cons": "IAM",
      "name": "getPolicy",
      "string": "IAM.prototype.getPolicy()"
    }
  },
  {
    "tags": [
      {
        "type": "throws",
        "string": "{Error} If no policy is provided.\n",
        "types": [
          "Error"
        ],
        "description": "<p>If no policy is provided. </p>"
      },
      {
        "type": "param",
        "string": "{object} policy - The [policy](https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy).",
        "name": "policy",
        "description": "<ul>\n<li>The <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy\">policy</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{array=} policy.bindings - Bindings associate members with roles.",
        "name": "policy.bindings",
        "description": "<ul>\n<li>Bindings associate members with roles.</li>\n</ul>\n",
        "types": [
          "array"
        ],
        "typesDescription": "<code>array</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object[]=} policy.rules - Rules to be applied to the policy.",
        "name": "policy.rules",
        "description": "<ul>\n<li>Rules to be applied to the policy.</li>\n</ul>\n",
        "types": [
          "Array.<object>"
        ],
        "typesDescription": "<code>Array</code>.&lt;<code>object</code>&gt;|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string=} policy.etag - Etags are used to perform a read-modify-write.",
        "name": "policy.etag",
        "description": "<ul>\n<li>Etags are used to perform a read-modify-write.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.policy - The updated policy.",
        "name": "callback.policy",
        "description": "<ul>\n<li>The updated policy.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "alias",
        "string": "iam.setPolicy ",
        "html": "<p>iam.setPolicy </p>"
      },
      {
        "type": "resource",
        "string": "[Topics: setIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}",
        "html": "<p>[Topics: setIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/setIamPolicy}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Subscriptions: setIamPolicy API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}",
        "html": "<p>[Subscriptions: setIamPolicy API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/setIamPolicy}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Policy]{@link https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy} ",
        "html": "<p>[Policy]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy}\">https://cloud.google.com/pubsub/reference/rest/Shared.Types/Policy}</a> </p>"
      },
      {
        "type": "example",
        "string": "var myPolicy = {\n  bindings: [\n    {\n      role: 'roles/pubsub.subscriber',\n      members: ['serviceAccount:myotherproject@appspot.gserviceaccount.com']\n    }\n  ]\n};\n\ntopic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});\n\nsubscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});",
        "html": "<p>var myPolicy = {<br />  bindings: [<br />    {<br />      role: &#39;roles/pubsub.subscriber&#39;,<br />      members: [&#39;serviceAccount:myotherproject@appspot.gserviceaccount.com&#39;]<br />    }<br />  ]<br />};</p><p>topic.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});</p><p>subscription.iam.setPolicy(myPolicy, function(err, policy, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the IAM policy</p>",
      "summary": "<p>Set the IAM policy</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 105,
    "codeStart": 139,
    "code": "IAM.prototype.setPolicy = function(policy, callback) {\n  if (!is.object(policy)) {\n    throw new Error('A policy is required');\n  }\n\n  var path = this.resource + ':setIamPolicy';\n  var body = {\n    policy: policy\n  };\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    callback(null, resp, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "IAM",
      "cons": "IAM",
      "name": "setPolicy",
      "string": "IAM.prototype.setPolicy()"
    }
  },
  {
    "tags": [
      {
        "type": "throws",
        "string": "{Error} If permissions are not provided.\n",
        "types": [
          "Error"
        ],
        "description": "<p>If permissions are not provided. </p>"
      },
      {
        "type": "param",
        "string": "{string|string[]} permissions - The permission(s) to test for.",
        "name": "permissions",
        "description": "<ul>\n<li>The permission(s) to test for.</li>\n</ul>\n",
        "types": [
          "string",
          "Array.<string>"
        ],
        "typesDescription": "<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{array} callback.permissions - A subset of permissions that the caller\n    is allowed",
        "name": "callback.permissions",
        "description": "<ul>\n<li>A subset of permissions that the caller     is allowed</li>\n</ul>\n",
        "types": [
          "array"
        ],
        "typesDescription": "<code>array</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "alias",
        "string": "iam.testPermissions ",
        "html": "<p>iam.testPermissions </p>"
      },
      {
        "type": "resource",
        "string": "[Topics: testIamPermissions API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}",
        "html": "<p>[Topics: testIamPermissions API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.topics/testIamPermissions}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Subscriptions: testIamPermissions API Documentation]{@link https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}",
        "html": "<p>[Subscriptions: testIamPermissions API Documentation]{@link <a href=\"https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}\">https://cloud.google.com/pubsub/reference/rest/v1/projects.subscriptions/testIamPermissions}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Permissions Reference]{@link https://cloud.google.com/pubsub/access_control#permissions} ",
        "html": "<p>[Permissions Reference]{@link <a href=\"https://cloud.google.com/pubsub/access_control#permissions}\">https://cloud.google.com/pubsub/access_control#permissions}</a> </p>"
      },
      {
        "type": "example",
        "string": "//-\n// Test a single permission.\n//-\nvar test = 'pubsub.topics.update';\n\ntopic.iam.testPermissions(test, function(err, permissions, apiResponse) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.topics.update\": true\n  // }\n});\n\n//-\n// Test several permissions at once.\n//-\nvar tests = [\n  'pubsub.subscriptions.consume',\n  'pubsub.subscriptions.update'\n];\n\nsubscription.iam.testPermissions(tests, function(err, permissions) {\n  console.log(permissions);\n  // {\n  //   \"pubsub.subscriptions.consume\": true,\n  //   \"pubsub.subscriptions.update\": false\n  // }\n});",
        "html": "<p>//-<br />// Test a single permission.<br />//-<br />var test = &#39;pubsub.topics.update&#39;;</p><p>topic.iam.testPermissions(test, function(err, permissions, apiResponse) {<br />  console.log(permissions);<br />  // {<br />  //   &quot;pubsub.topics.update&quot;: true<br />  // }<br />});</p><p>//-<br />// Test several permissions at once.<br />//-<br />var tests = [<br />  &#39;pubsub.subscriptions.consume&#39;,<br />  &#39;pubsub.subscriptions.update&#39;<br />];</p><p>subscription.iam.testPermissions(tests, function(err, permissions) {<br />  console.log(permissions);<br />  // {<br />  //   &quot;pubsub.subscriptions.consume&quot;: true,<br />  //   &quot;pubsub.subscriptions.update&quot;: false<br />  // }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Test a set of permissions for a resource.</p><p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>",
      "summary": "<p>Test a set of permissions for a resource.</p>",
      "body": "<p>Permissions with wildcards such as <code>*</code> or <code>storage.*</code> are not allowed.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 159,
    "codeStart": 208,
    "code": "IAM.prototype.testPermissions = function(permissions, callback) {\n  if (!is.array(permissions) && !is.string(permissions)) {\n    throw new Error('Permissions are required');\n  }\n\n  var path = this.resource + ':testIamPermissions';\n  var body = {\n    permissions: arrify(permissions)\n  };\n\n  this.makeReq_('POST', path, null, body, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var availablePermissions = resp.permissions || [];\n\n    var permissionsHash = body.permissions.reduce(function(acc, permission) {\n      acc[permission] = availablePermissions.indexOf(permission) > -1;\n      return acc;\n    }, {});\n\n    callback(null, permissionsHash, resp);\n  });\n};\n\nmodule.exports = IAM;",
    "ctx": {
      "type": "method",
      "constructor": "IAM",
      "cons": "IAM",
      "name": "testPermissions",
      "string": "IAM.prototype.testPermissions()"
    }
  }
]