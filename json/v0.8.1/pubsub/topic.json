{"id":"topic","metadata":{"name":null,"description":null},"methods":[{"metadata":{"constructor":false,"name":"Topic","source":"/lib/pubsub/topic.js#L58","description":"<p>A Topic object allows you to interact with a Google Cloud Pub/Sub topic. To get this object, you will use the methods on the <code>pubsub</code> object, <a data-custom-type=\"pubsub#topic\"></a> and <a data-custom-type=\"pubsub#createTopic\"></a>.</p>","examples":[{"code":"// From pubsub.topic:\nvar topic = pubsub.topic('my-existing-topic');\n\n// From pubsub.createTopic:\npubsub.createTopic('my-new-topic', function(err, topic) {\n  // `topic` is a Topic object.\n});"}],"resources":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"publish","source":"/lib/pubsub/topic.js#L98","description":"<p>Publish the provided message. A message can be of any type.</p>","examples":[{"code":"topic.publish('New message!', function(err) {});\n\ntopic.publish({\n  user_id: 3,\n  name: 'Stephen',\n  message: 'Hello from me!'\n}, function(err) {});"}],"resources":[]},"params":[{"name":"message","description":"- The message to publish.","types":["*"]},{"name":"callback","description":"- The callback function. ","types":["function="]}],"exceptions":[{"type":"Error","description":"If no message is provided. "}],"returns":[]},{"metadata":{"constructor":false,"name":"publishRaw","source":"/lib/pubsub/topic.js#L126","description":"<p>Publish a raw message.</p>","examples":[{"code":"topic.publishRaw({\n  data: new Buffer('New message!').toString('base64')\n}, function(err) {});"}],"resources":[]},"params":[{"name":"message","description":"- Raw message to publish.","types":["object"]},{"name":"message.label","description":"- List of labels for the message.","types":["array="]},{"name":"message.data","description":"- The contents of the message.","types":["*"]},{"name":"callback","description":"- The callback function. ","types":["function="]}],"exceptions":[{"type":"Error","description":"If no message is provided. "}],"returns":[]},{"metadata":{"constructor":false,"name":"delete","source":"/lib/pubsub/topic.js#L146","description":"<p>Delete the topic.</p>","examples":[{"code":"topic.delete(function(err) {});"}],"resources":[]},"params":[{"name":"callback","description":"- The callback function. ","types":["function="]}],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"getSubscriptions","source":"/lib/pubsub/topic.js#L176","description":"<p>Get a list of the subscriptions registered to this topic. You may optionally provide a query object as the first argument to customize the response.</p><p>Your provided callback will either be invoked with an error object, if an API error occurred, or an array of <a data-custom-type=\"pubsub/subscription\"></a> objects.</p>","examples":[{"code":"// Get all subscriptions.\ntopic.getSubscriptions(function(err, subscriptions, nextQuery) {\n  // If `nextQuery` is non-null, there may be more results to fetch. To do\n  // so, run `topic.getSubscriptions(nextQuery, callback);`.\n});\n\n// Customize the query.\ntopic.getSubscriptions({\n  maxResults: 3\n}, function(err, subscriptions, nextQuery) {});"}],"resources":[]},"params":[{"name":"query","description":"- Query object.","types":["object="]},{"name":"query.pageToken","description":"- Page token.","types":["string="]},{"name":"query.maxResults","description":"- Maximum number of results to return.","types":["number="]},{"name":"callback","description":"- The callback function. ","types":["function"]}],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"subscribe","source":"/lib/pubsub/topic.js#L211","description":"<p>Create a subscription to this topic. You may optionally provide an object to customize the subscription.</p><p>Your provided callback will either be invoked with an error object, if an API error occurred, or a <a data-custom-type=\"pubsub/subscription\"></a> object.</p>","examples":[{"code":"// Without specifying any options.\ntopic.subscribe('new-subscription', function(err, subscription) {});\n\n// With options.\ntopic.subscribe('new-subscription', {\n  ackDeadlineSeconds: 90,\n  autoAck: true,\n  interval: 30\n}, function(err, subscription) {});"}],"resources":[]},"params":[{"name":"name","description":"- The name of the subscription.","types":["string"]},{"name":"options","description":"- Configuration object.","types":["object="]},{"name":"options.ackDeadlineSeconds","description":"- The maximum time after receiving a message that you must ack a message before it is redelivered.","types":["number="]},{"name":"options.autoAck","description":"- Automatically acknowledge the message once it's pulled. (default: false)","types":["boolean="]},{"name":"options.interval","description":"- Interval in milliseconds to check for new messages. (default: 10)","types":["number="]},{"name":"callback","description":"- The callback function. ","types":["function"]}],"exceptions":[{"type":"Error","description":"If a name is not provided. "}],"returns":[]},{"metadata":{"constructor":false,"name":"subscription","source":"/lib/pubsub/topic.js#L261","description":"<p>Create a Subscription object in reference to an existing subscription. This command by itself will not run any API requests. You will receive a <a data-custom-type=\"pubsub/subscription\"></a> object, which will allow you to interact with your subscription.</p>","examples":[{"code":"var subscription = topic.subscription('my-existing-subscription');\n\n// Register a listener for `message` events.\nsubscription.on('message', function(message) {\n  // Called every time a message is received.\n  // message.id = ID used to acknowledge its receival.\n  // message.data = Contents of the message.\n});"}],"resources":[]},"params":[{"name":"name","description":"- Name of the subscription.","types":["string"]},{"name":"options","description":"- Configuration object.","types":["object="]},{"name":"options.autoAck","description":"- Automatically acknowledge the message once it's pulled.","types":["boolean="]},{"name":"options.interval","description":"- Interval in milliseconds to check for new messages.","types":["number="]}],"exceptions":[{"type":"Error","description":"If a name is not provided. "}],"returns":[]}]}