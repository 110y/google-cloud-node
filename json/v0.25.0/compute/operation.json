{"id":"operation","metadata":{"name":"Operation","description":null},"methods":[{"metadata":{"constructor":true,"name":"Operation","source":"/lib/compute/operation.js#L106","description":"<p>An Operation object allows you to interact with a Google Compute Engine operation.</p><p>An operation can be a <a href=\"https://cloud.google.com/compute/docs/reference/v1/globalOperations\">GlobalOperation</a>, <a href=\"https://cloud.google.com/compute/docs/reference/v1/regionOperations\">RegionOperation</a>, or <a href=\"https://cloud.google.com/compute/docs/reference/v1/zoneOperations\">ZoneOperation</a>.</p>","examples":[{"code":"var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();"},{"caption":"<p>Reference a global operation.</p>","code":"var operation = gce.operation('operation-id');"},{"caption":"<p>Reference a region operation.</p>","code":"var region = gce.region('us-central1');\nvar operation = region.operation('operation-id');"},{"caption":"<p>Reference a zone operation.</p>","code":"var zone = gce.zone('us-central1-a');\nvar operation = zone.operation('operation-id');"},{"caption":"<p>All operations are event emitters. The status of each operation is polled \ncontinuously, starting only after you register a \"complete\" listener.</p>","code":"operation.on('complete', function(metadata) {\n  // The operation is complete.\n});"},{"caption":"<p>Be sure to register an error handler as well to catch any issues which \nimpeded the operation.</p>","code":"operation.on('error', function(err) {\n  // An error occurred during the operation.\n});"},{"caption":"<p>To force the Operation object to stop polling for updates, simply remove \nany \"complete\" listeners you've registered. \nThe easiest way to do this is with <code>removeAllListeners()</code>.</p>","code":"operation.removeAllListeners();"}],"resources":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"delete","source":"/lib/compute/operation.js#L125","description":"<p>Delete the operation.</p>","examples":[{"code":"operation.delete(function(err, apiResponse) {});"}],"resources":[{"title":"GlobalOperations: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/globalOperations/delete"},{"title":"RegionOperations: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/regionOperations/delete"},{"title":"ZoneOperations: delete API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/zoneOperations/delete"}]},"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"exists","source":"/lib/compute/operation.js#L138","description":"<p>Check if the operation exists.</p>","examples":[{"code":"operation.exists(function(err, exists) {});"}],"resources":[]},"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":false,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.exists","description":"<ul> <li>Whether the operation exists or not.</li> </ul> ","types":["boolean"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"get","source":"/lib/compute/operation.js#L148","description":"<p>Get an operation if it exists.</p>","examples":[{"code":"operation.get(function(err, operation, apiResponse) {\n  // `operation` is an Operation object.\n});"}],"resources":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"constructor":false,"name":"getMetadata","source":"/lib/compute/operation.js#L188","description":"<p>Get the operation&#39;s metadata. For a detailed description of metadata see <a href=\"https://goo.gl/sWm1rt\">Operation resource</a>.</p>","examples":[{"code":"operation.getMetadata(function(err, metadata, apiResponse) {\n  // `metadata.error`: Contains errors if the operation failed.\n  // `metadata.warnings`: Contains warnings.\n});"}],"resources":[{"title":"GlobalOperations: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/globalOperations/get"},{"title":"RegionOperations: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/regionOperations/get"},{"title":"ZoneOperations: get API Documentation","link":"https://cloud.google.com/compute/docs/reference/v1/zoneOperations/get"}]},"params":[{"name":"callback","description":"<ul> <li>The callback function.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.err","description":"<ul> <li>An error returned while making this request</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.metadata","description":"<ul> <li>The disk&#39;s metadata.</li> </ul> ","types":["object"],"optional":false,"nullable":false},{"name":"callback.apiResponse","description":"<ul> <li>The full API response.</li> </ul> ","types":["object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}