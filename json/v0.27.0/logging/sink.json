[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "logging/sink",
        "html": "<p>logging/sink</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';\n\nvar extend = require('extend');\nvar nodeutil = require('util');",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/serviceObject}",
        "types": [
          "module:common/serviceObject"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2FserviceObject.html\">common/serviceObject</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/serviceObject}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 26,
    "codeStart": 30,
    "code": "var ServiceObject = require('../common/service-object.js');",
    "ctx": {
      "type": "declaration",
      "name": "ServiceObject",
      "value": "require('../common/service-object.js')",
      "string": "ServiceObject"
    }
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/util}",
        "types": [
          "module:common/util"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/util}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 32,
    "codeStart": 36,
    "code": "var util = require('../common/util.js');",
    "ctx": {
      "type": "declaration",
      "name": "util",
      "value": "require('../common/util.js')",
      "string": "util"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:logging} logging - The Logging instance.",
        "name": "logging",
        "description": "<ul>\n<li>The Logging instance.</li>\n</ul>\n",
        "types": [
          "module:logging"
        ],
        "typesDescription": "module:<a href=\"module%3Alogging.html\">logging</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 38,
    "codeStart": 42
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Introduction to Sinks]{@link https://cloud.google.com/logging/docs/api/#sinks}",
        "html": "<p>[Introduction to Sinks]{@link <a href=\"https://cloud.google.com/logging/docs/api/#sinks}\">https://cloud.google.com/logging/docs/api/#sinks}</a></p>"
      },
      {
        "type": "alias",
        "string": "module:logging/sink",
        "html": "<p>module:logging/sink</p>"
      },
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "param",
        "string": "{object} options - [Configuration object](#/docs/?method=gcloud).",
        "name": "options",
        "description": "<ul>\n<li><a href=\"#/docs/?method=gcloud\">Configuration object</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar logging = gcloud.logging();\nvar sink = logging.sink('my-sink');",
        "html": "<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var logging = gcloud.logging();<br />var sink = logging.sink(&#39;my-sink&#39;);</p>"
      }
    ],
    "description": {
      "full": "<p>A sink is an object that lets you to specify a set of log entries to export<br />to a particular destination. Cloud Logging lets you export log entries to<br />destinations including Google Cloud Storage buckets (for long term log<br />storage), Google BigQuery datasets (for log analysis), Google Pub/Sub (for<br />streaming to other applications).</p>",
      "summary": "<p>A sink is an object that lets you to specify a set of log entries to export<br />to a particular destination. Cloud Logging lets you export log entries to<br />destinations including Google Cloud Storage buckets (for long term log<br />storage), Google BigQuery datasets (for log analysis), Google Pub/Sub (for<br />streaming to other applications).</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 42,
    "codeStart": 65,
    "code": "function Sink(logging, name) {\n  var methods = {",
    "ctx": {
      "type": "constructor",
      "name": "Sink",
      "string": "Sink()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{object} config - See {module:logging#createSink}.",
        "name": "config",
        "description": "<ul>\n<li>See {module:logging#createSink}.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var config = {\n  // ...\n};\n\nsink.create(config, function(err, sink, apiResponse) {\n  if (!err) {\n    // The sink was created successfully.\n  }\n});",
        "html": "<p>var config = {<br />  // ...<br />};</p><p>sink.create(config, function(err, sink, apiResponse) {<br />  if (!err) {<br />    // The sink was created successfully.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Create a sink.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>",
      "summary": "<p>Create a sink.</p>",
      "body": "<p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 67,
    "codeStart": 86,
    "code": "create: true,",
    "ctx": {
      "type": "property",
      "name": "create",
      "value": "true,",
      "string": "create"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects.sink.delete API Documentation]{@link https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/delete}",
        "html": "<p>[projects.sink.delete API Documentation]{@link <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/delete}\">https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/delete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "sink.delete(function(err, apiResponse) {\n  if (!err) {\n    // The log was deleted.\n  }\n});",
        "html": "<p>sink.delete(function(err, apiResponse) {<br />  if (!err) {<br />    // The log was deleted.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Delete the sink.</p>",
      "summary": "<p>Delete the sink.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 88,
    "codeStart": 105,
    "code": "delete: true,",
    "ctx": {
      "type": "property",
      "name": "delete",
      "value": "true,",
      "string": "delete"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Sink Resource]{@link https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}",
        "html": "<p>[Sink Resource]{@link <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}\">https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}</a></p>"
      },
      {
        "type": "resource",
        "string": "[projects.sink.get API Documentation]{@link https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/get}",
        "html": "<p>[projects.sink.get API Documentation]{@link <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/get}\">https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/get}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.metadata - The sink's metadata.",
        "name": "callback.metadata",
        "description": "<ul>\n<li>The sink&#39;s metadata.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "sink.getMetadata(function(err, metadata, apiResponse) {});",
        "html": "<p>sink.getMetadata(function(err, metadata, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the sink&#39;s metadata.</p>",
      "summary": "<p>Get the sink&#39;s metadata.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 107,
    "codeStart": 122,
    "code": "getMetadata: true\n  };\n\n  ServiceObject.call(this, {\nparent: logging,\nbaseUrl: '/sinks',\nid: name,\ncreateMethod: logging.createSink.bind(logging),\nmethods: methods\n  });\n\n  this.name = name;\n}\n\nnodeutil.inherits(Sink, ServiceObject);",
    "ctx": {
      "type": "property",
      "name": "getMetadata",
      "value": "true",
      "string": "getMetadata"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Advanced Logs Filters]{@link https://cloud.google.com/logging/docs/view/advanced_filters}",
        "html": "<p>[Advanced Logs Filters]{@link <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters}\">https://cloud.google.com/logging/docs/view/advanced_filters}</a></p>"
      },
      {
        "type": "param",
        "string": "{string} filter - The new filter.",
        "name": "filter",
        "description": "<ul>\n<li>The new filter.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "sink.setFilter('metadata.severity = ALERT', function(err, apiResponse) {});",
        "html": "<p>sink.setFilter(&#39;metadata.severity = ALERT&#39;, function(err, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the sink&#39;s filter.</p><p>This will override any filter that was previously set.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>",
      "summary": "<p>Set the sink&#39;s filter.</p>",
      "body": "<p>This will override any filter that was previously set.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 138,
    "codeStart": 157,
    "code": "Sink.prototype.setFilter = function(filter, callback) {\n  this.setMetadata({\n    filter: filter\n  }, callback);\n};",
    "ctx": {
      "type": "method",
      "constructor": "Sink",
      "cons": "Sink",
      "name": "setFilter",
      "string": "Sink.prototype.setFilter()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Sink Resource]{@link https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}",
        "html": "<p>[Sink Resource]{@link <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}\">https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink}</a></p>"
      },
      {
        "type": "resource",
        "string": "[projects.sink.update API Documentation]{@link https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/update}",
        "html": "<p>[projects.sink.update API Documentation]{@link <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/update}\">https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks/update}</a></p>"
      },
      {
        "type": "param",
        "string": "{object} metadata - See a\n    [Sink resource](https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink).",
        "name": "metadata",
        "description": "<ul>\n<li>See a     <a href=\"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/projects.sinks#LogSink\">Sink resource</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var metadata = {\n  filter: 'metadata.severity = ALERT'\n};\n\nsink.setMetadata(metadata, function(err, apiResponse) {});",
        "html": "<p>var metadata = {<br />  filter: &#39;metadata.severity = ALERT&#39;<br />};</p><p>sink.setMetadata(metadata, function(err, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the sink&#39;s metadata.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>",
      "summary": "<p>Set the sink&#39;s metadata.</p>",
      "body": "<p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 163,
    "codeStart": 186,
    "code": "Sink.prototype.setMetadata = function(metadata, callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.getMetadata(function(err, currentMetadata, apiResponse) {\n    if (err) {\n      callback(err, apiResponse);\n      return;\n    }\n\n    self.request({\n      uri: '',\n      method: 'PUT',\n      json: extend({}, currentMetadata, metadata)\n    }, function(err, apiResponse) {\n      if (err) {\n        callback(err, apiResponse);\n        return;\n      }\n\n      self.metadata = apiResponse;\n\n      callback(null, apiResponse);\n    });\n  });\n};\n\nmodule.exports = Sink;",
    "ctx": {
      "type": "method",
      "constructor": "Sink",
      "cons": "Sink",
      "name": "setMetadata",
      "string": "Sink.prototype.setMetadata()"
    }
  }
]