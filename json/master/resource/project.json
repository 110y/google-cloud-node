[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "resource/project",
        "html": "<p>resource/project</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';\n\nvar nodeutil = require('util');",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/serviceObject}",
        "types": [
          "module:common/serviceObject"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2FserviceObject.html\">common/serviceObject</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/serviceObject}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 25,
    "codeStart": 29,
    "code": "var ServiceObject = require('../common/service-object.js');",
    "ctx": {
      "type": "declaration",
      "name": "ServiceObject",
      "value": "require('../common/service-object.js')",
      "string": "ServiceObject"
    }
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/util}",
        "types": [
          "module:common/util"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/util}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 35,
    "code": "var util = require('../common/util.js');",
    "ctx": {
      "type": "declaration",
      "name": "util",
      "value": "require('../common/util.js')",
      "string": "util"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:resource} resource - Resource object this project belongs to.",
        "name": "resource",
        "description": "<ul>\n<li>Resource object this project belongs to.</li>\n</ul>\n",
        "types": [
          "module:resource"
        ],
        "typesDescription": "module:<a href=\"module%3Aresource.html\">resource</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} id - The project's ID.",
        "name": "id",
        "description": "<ul>\n<li>The project&#39;s ID.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 37,
    "codeStart": 42
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Projects Overview]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}",
        "html": "<p>[Projects Overview]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Project Resource]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}",
        "html": "<p>[Project Resource]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}</a></p>"
      },
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "alias",
        "string": "module:resource/project",
        "html": "<p>module:resource/project</p>"
      },
      {
        "type": "example",
        "string": "var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar resource = gcloud.resource();\nvar project = resource.project('grape-spaceship-123');\n\n//-\n// If no ID is passed to `resource.project()`, the returned object will refer\n// to the project originally specified during instantiation of `gcloud`.\n//\n// Thus, in this case, these are equivalent:\n//-\nvar project = resource.project('grape-spaceship-123');\nvar project = resource.project();",
        "html": "<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var resource = gcloud.resource();<br />var project = resource.project(&#39;grape-spaceship-123&#39;);</p><p>//-<br />// If no ID is passed to <code>resource.project()</code>, the returned object will refer<br />// to the project originally specified during instantiation of <code>gcloud</code>.<br />//<br />// Thus, in this case, these are equivalent:<br />//-<br />var project = resource.project(&#39;grape-spaceship-123&#39;);<br />var project = resource.project();</p>"
      }
    ],
    "description": {
      "full": "<p>A Project object allows you to interact with a Google Cloud Platform project.</p>",
      "summary": "<p>A Project object allows you to interact with a Google Cloud Platform project.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 42,
    "codeStart": 69,
    "code": "function Project(resource, id) {\n  var methods = {",
    "ctx": {
      "type": "constructor",
      "name": "Project",
      "string": "Project()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{object=} config - See {module:resource#createProject}.",
        "name": "config",
        "description": "<ul>\n<li>See {module:resource#createProject}.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.create(function(err, zone, apiResponse) {\n  if (!err) {\n    // The zone was created successfully.\n  }\n});",
        "html": "<p>project.create(function(err, zone, apiResponse) {<br />  if (!err) {<br />    // The zone was created successfully.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Create a project.</p>",
      "summary": "<p>Create a project.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 71,
    "codeStart": 83,
    "code": "create: true,",
    "ctx": {
      "type": "property",
      "name": "create",
      "value": "true,",
      "string": "create"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: delete API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete}",
        "html": "<p>[projects: delete API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.delete(function(err, apiResponse) {\n  if (!err) {\n    // The project was deleted!\n  }\n});",
        "html": "<p>project.delete(function(err, apiResponse) {<br />  if (!err) {<br />    // The project was deleted!<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Delete the project.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>",
      "summary": "<p>Delete the project.</p>",
      "body": "<p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 85,
    "codeStart": 105,
    "code": "delete: true,",
    "ctx": {
      "type": "property",
      "name": "delete",
      "value": "true,",
      "string": "delete"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{boolean} callback.exists - Whether the project exists or not.",
        "name": "callback.exists",
        "description": "<ul>\n<li>Whether the project exists or not.</li>\n</ul>\n",
        "types": [
          "boolean"
        ],
        "typesDescription": "<code>boolean</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.exists(function(err, exists) {});",
        "html": "<p>project.exists(function(err, exists) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Check if the project exists.</p>",
      "summary": "<p>Check if the project exists.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 107,
    "codeStart": 118,
    "code": "exists: true,",
    "ctx": {
      "type": "property",
      "name": "exists",
      "value": "true,",
      "string": "exists"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{options=} options - Configuration object.",
        "name": "options",
        "description": "<ul>\n<li>Configuration object.</li>\n</ul>\n",
        "types": [
          "options"
        ],
        "typesDescription": "<a href=\"options.html\">options</a>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{boolean} options.autoCreate - Automatically create the object if\n    it does not exist. Default: `false`",
        "name": "options.autoCreate",
        "description": "<ul>\n<li>Automatically create the object if     it does not exist. Default: <code>false</code></li>\n</ul>\n",
        "types": [
          "boolean"
        ],
        "typesDescription": "<code>boolean</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.get(function(err, project, apiResponse) {\n  // `project.metadata` has been populated.\n});",
        "html": "<p>project.get(function(err, project, apiResponse) {<br />  // <code>project.metadata</code> has been populated.<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Get a project if it exists.</p><p>You may optionally use this to &quot;get or create&quot; an object by providing an<br />object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is<br />normally required for the <code>create</code> method must be contained within this<br />object as well.</p>",
      "summary": "<p>Get a project if it exists.</p>",
      "body": "<p>You may optionally use this to &quot;get or create&quot; an object by providing an<br />object with <code>autoCreate</code> set to <code>true</code>. Any extra configuration that is<br />normally required for the <code>create</code> method must be contained within this<br />object as well.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 120,
    "codeStart": 137,
    "code": "get: true,",
    "ctx": {
      "type": "property",
      "name": "get",
      "value": "true,",
      "string": "get"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: get API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get}",
        "html": "<p>[projects: get API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?object} callback.metadata - Metadata of the project from the\n    API.",
        "name": "callback.metadata",
        "description": "<ul>\n<li>Metadata of the project from the     API.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - Raw API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>Raw API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.getMetadata(function(err, metadata, apiResponse) {});",
        "html": "<p>project.getMetadata(function(err, metadata, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the metadata for the project.</p>",
      "summary": "<p>Get the metadata for the project.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 139,
    "codeStart": 154,
    "code": "getMetadata: true,",
    "ctx": {
      "type": "property",
      "name": "getMetadata",
      "value": "true,",
      "string": "getMetadata"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: update API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}",
        "html": "<p>[projects: update API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Project Resource]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}",
        "html": "<p>[Project Resource]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}</a></p>"
      },
      {
        "type": "param",
        "string": "{object} metadata - See a\n    [Project resource](https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project).",
        "name": "metadata",
        "description": "<ul>\n<li>See a     <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project\">Project resource</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this\n    request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this     request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var metadata = {\n  name: 'New name'\n};\n\nproject.setMetadata(metadata, function(err, apiResponse) {\n  if (!err) {\n    // The project has been successfully updated.\n  }\n});",
        "html": "<p>var metadata = {<br />  name: &#39;New name&#39;<br />};</p><p>project.setMetadata(metadata, function(err, apiResponse) {<br />  if (!err) {<br />    // The project has been successfully updated.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the project&#39;s metadata.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>",
      "summary": "<p>Set the project&#39;s metadata.</p>",
      "body": "<p><strong>This method only works if you are authenticated as yourself, e.g. using<br />the gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 156,
    "codeStart": 183,
    "code": "setMetadata: {\n  reqOpts: {\n    method: 'PUT'\n  }\n}\n  };\n\n  ServiceObject.call(this, {\nparent: resource,\nbaseUrl: '/projects',\nid: id,\ncreateMethod: resource.createProject.bind(resource),\nmethods: methods\n  });\n}\n\nnodeutil.inherits(Project, ServiceObject);",
    "ctx": {
      "type": "property",
      "name": "setMetadata",
      "value": "{",
      "string": "setMetadata"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: undelete API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete}",
        "html": "<p>[projects: undelete API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - Raw API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>Raw API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.restore(function(err, apiResponse) {\n  if (!err) {\n    // Project restored.\n  }\n});",
        "html": "<p>project.restore(function(err, apiResponse) {<br />  if (!err) {<br />    // Project restored.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Restore a project.</p><p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>",
      "summary": "<p>Restore a project.</p>",
      "body": "<p><strong>This method only works if you are authenticated as yourself, e.g. using the<br />gcloud SDK.</strong></p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 201,
    "codeStart": 220,
    "code": "Project.prototype.restore = function(callback) {\n  callback = callback || util.noop;\n\n  this.request({\n    method: 'POST',\n    uri: ':undelete'\n  }, function(err, resp) {\n    callback(err, resp);\n  });\n};\n\nmodule.exports = Project;",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "restore",
      "string": "Project.prototype.restore()"
    }
  }
]