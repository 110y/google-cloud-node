[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "resource/project",
        "html": "<p>resource/project</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/util}",
        "types": [
          "module:common/util"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/util}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 23,
    "codeStart": 27,
    "code": "var util = require('../common/util.js');",
    "ctx": {
      "type": "declaration",
      "name": "util",
      "value": "require('../common/util.js')",
      "string": "util"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:resource} resource - Resource object this project belongs to.",
        "name": "resource",
        "description": "<ul>\n<li>Resource object this project belongs to.</li>\n</ul>\n",
        "types": [
          "module:resource"
        ],
        "typesDescription": "module:<a href=\"module%3Aresource.html\">resource</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} id - The project's ID.",
        "name": "id",
        "description": "<ul>\n<li>The project&#39;s ID.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 29,
    "codeStart": 34
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Projects Overview]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}",
        "html": "<p>[Projects Overview]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Project Resource]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project} ",
        "html": "<p>[Project Resource]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}</a> </p>"
      },
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "alias",
        "string": "module:resource/project ",
        "html": "<p>module:resource/project </p>"
      },
      {
        "type": "example",
        "string": "var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar resource = gcloud.resource();\nvar project = resource.project('grape-spaceship-123');\n\n//-\n// If no ID is passed to `resource.project()`, the returned object will refer\n// to the project originally specified during instantiation of `gcloud`.\n//\n// Thus, in this case, these are equivalent:\n//-\nvar project = resource.project('grape-spaceship-123');\nvar project = resource.project();",
        "html": "<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var resource = gcloud.resource();<br />var project = resource.project(&#39;grape-spaceship-123&#39;);</p><p>//-<br />// If no ID is passed to <code>resource.project()</code>, the returned object will refer<br />// to the project originally specified during instantiation of <code>gcloud</code>.<br />//<br />// Thus, in this case, these are equivalent:<br />//-<br />var project = resource.project(&#39;grape-spaceship-123&#39;);<br />var project = resource.project();</p>"
      }
    ],
    "description": {
      "full": "<p>A Project object allows you to interact with a Google Cloud Platform project.</p>",
      "summary": "<p>A Project object allows you to interact with a Google Cloud Platform project.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 34,
    "codeStart": 61,
    "code": "function Project(resource, id) {\n  this.resource = resource;\n  this.id = id;\n  this.metadata = {};\n}",
    "ctx": {
      "type": "constructor",
      "name": "Project",
      "string": "Project()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: delete API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete} ",
        "html": "<p>[projects: delete API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/delete}</a> </p>"
      },
      {
        "type": "private",
        "string": "\n",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.delete(function(err, apiResponse) {\n  if (!err) {\n    // The project was deleted!\n  }\n});",
        "html": "<p>project.delete(function(err, apiResponse) {<br />  if (!err) {<br />    // The project was deleted!<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Delete the project.</p>",
      "summary": "<p>Delete the project.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 67,
    "codeStart": 85,
    "code": "Project.prototype.delete = function(callback) {\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    callback(err, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "delete",
      "string": "Project.prototype.delete()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: get API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get} ",
        "html": "<p>[projects: get API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/get}</a> </p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?object} callback.metadata - Metadata of the project from the API.",
        "name": "callback.metadata",
        "description": "<ul>\n<li>Metadata of the project from the API.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - Raw API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>Raw API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.getMetadata(function(err, metadata, apiResponse) {});",
        "html": "<p>project.getMetadata(function(err, metadata, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the metadata for the project.</p>",
      "summary": "<p>Get the metadata for the project.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 93,
    "codeStart": 106,
    "code": "Project.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "getMetadata",
      "string": "Project.prototype.getMetadata()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: undelete API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete} ",
        "html": "<p>[projects: undelete API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/undelete}</a> </p>"
      },
      {
        "type": "private",
        "string": "\n",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - Raw API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>Raw API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "project.restore(function(err, apiResponse) {\n  if (!err) {\n    // Project restored.\n  }\n});",
        "html": "<p>project.restore(function(err, apiResponse) {<br />  if (!err) {<br />    // Project restored.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Restore a project.</p>",
      "summary": "<p>Restore a project.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 123,
    "codeStart": 141,
    "code": "Project.prototype.restore = function(callback) {\n  callback = callback || util.noop;\n\n  this.makeReq_('POST', ':undelete', null, null, function(err, resp) {\n    callback(err, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "restore",
      "string": "Project.prototype.restore()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[projects: update API Documentation]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}",
        "html": "<p>[projects: update API Documentation]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects/update}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Project Resource]{@link https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project} ",
        "html": "<p>[Project Resource]{@link <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}\">https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project}</a> </p>"
      },
      {
        "type": "private",
        "string": "\n",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{object} metadata - See a\n    [Project resource](https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project).",
        "name": "metadata",
        "description": "<ul>\n<li>See a     <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1beta1/projects#Project\">Project resource</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.\n",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response. </li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var metadata = {\n  name: 'New name'\n};\n\nproject.setMetadata(metadata, function(err, apiResponse) {\n  if (!err) {\n    // The project has been successfully updated.\n  }\n});",
        "html": "<p>var metadata = {<br />  name: &#39;New name&#39;<br />};</p><p>project.setMetadata(metadata, function(err, apiResponse) {<br />  if (!err) {<br />    // The project has been successfully updated.<br />  }<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the project&#39;s metadata.</p>",
      "summary": "<p>Set the project&#39;s metadata.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 149,
    "codeStart": 174,
    "code": "Project.prototype.setMetadata = function(metadata, callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('PUT', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "setMetadata",
      "string": "Project.prototype.setMetadata()"
    }
  },
  {
    "tags": [
      {
        "type": "private",
        "string": "\n",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{string} method - Action.",
        "name": "method",
        "description": "<ul>\n<li>Action.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} path - Request path.",
        "name": "path",
        "description": "<ul>\n<li>Request path.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} query - Request query object.",
        "name": "query",
        "description": "<ul>\n<li>Request query object.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} body - Request body contents.",
        "name": "body",
        "description": "<ul>\n<li>Request body contents.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "summary": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 191,
    "codeStart": 203,
    "code": "Project.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/' + this.id + path;\n  this.resource.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Project;",
    "ctx": {
      "type": "method",
      "constructor": "Project",
      "cons": "Project",
      "name": "makeReq_",
      "string": "Project.prototype.makeReq_()"
    }
  }
]