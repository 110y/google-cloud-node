[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "compute/firewall",
        "html": "<p>compute/firewall</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/util}",
        "types": [
          "module:common/util"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/util}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 23,
    "codeStart": 27,
    "code": "var util = require('../common/util.js');",
    "ctx": {
      "type": "declaration",
      "name": "util",
      "value": "require('../common/util.js')",
      "string": "util"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:compute} compute - Compute object this firewall belongs to.",
        "name": "compute",
        "description": "<ul>\n<li>Compute object this firewall belongs to.</li>\n</ul>\n",
        "types": [
          "module:compute"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute.html\">compute</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} name - Name of the firewall.",
        "name": "name",
        "description": "<ul>\n<li>Name of the firewall.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 29,
    "codeStart": 34
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}",
        "html": "<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls}",
        "html": "<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a></p>"
      },
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "alias",
        "string": "module:compute/firewall",
        "html": "<p>module:compute/firewall</p>"
      },
      {
        "type": "example",
        "string": "var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar firewall = gce.firewall('tcp-3000');",
        "html": "<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var firewall = gce.firewall(&#39;tcp-3000&#39;);</p>"
      }
    ],
    "description": {
      "full": "<p>A Firewall object allows you to interact with a Google Compute Engine<br />firewall.</p>",
      "summary": "<p>A Firewall object allows you to interact with a Google Compute Engine<br />firewall.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 34,
    "codeStart": 54,
    "code": "function Firewall(compute, name) {\n  this.compute = compute;\n  this.name = name;\n\n  this.metadata = {\n    network: 'global/networks/default'\n  };\n}",
    "ctx": {
      "type": "constructor",
      "name": "Firewall",
      "string": "Firewall()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/delete}",
        "html": "<p>[Firewalls: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/delete}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/delete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.",
        "name": "callback.operation",
        "description": "<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n",
        "types": [
          "module:compute/operation"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "firewall.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});",
        "html": "<p>firewall.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Delete the firewall.</p>",
      "summary": "<p>Delete the firewall.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 63,
    "codeStart": 80,
    "code": "Firewall.prototype.delete = function(callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Firewall",
      "cons": "Firewall",
      "name": "delete",
      "string": "Firewall.prototype.delete()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/get}",
        "html": "<p>[Firewalls: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/get}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/get}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls}",
        "html": "<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.metadata - The firewall's metadata.",
        "name": "callback.metadata",
        "description": "<ul>\n<li>The firewall&#39;s metadata.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "firewall.getMetadata(function(err, metadata, apiResponse) {});",
        "html": "<p>firewall.getMetadata(function(err, metadata, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the firewall&#39;s metadata.</p>",
      "summary": "<p>Get the firewall&#39;s metadata.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 98,
    "codeStart": 112,
    "code": "Firewall.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Firewall",
      "cons": "Firewall",
      "name": "getMetadata",
      "string": "Firewall.prototype.getMetadata()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewall Resource]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls}",
        "html": "<p>[Firewall Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls}\">https://cloud.google.com/compute/docs/reference/v1/firewalls}</a></p>"
      },
      {
        "type": "param",
        "string": "{object} metadata - See a\n    [Firewall resource](https://cloud.google.com/compute/docs/reference/v1/firewalls).",
        "name": "metadata",
        "description": "<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls\">Firewall resource</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.",
        "name": "callback.operation",
        "description": "<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n",
        "types": [
          "module:compute/operation"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var metadata = {\n  description: 'New description'\n};\n\nfirewall.setMetadata(metadata, function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});",
        "html": "<p>var metadata = {<br />  description: &#39;New description&#39;<br />};</p><p>firewall.setMetadata(metadata, function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Set the firewall&#39;s metadata.</p>",
      "summary": "<p>Set the firewall&#39;s metadata.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 129,
    "codeStart": 152,
    "code": "Firewall.prototype.setMetadata = function(metadata, callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  metadata = metadata || {};\n  metadata.name = this.name;\n  metadata.network = this.metadata.network;\n\n  this.makeReq_('PATCH', '', null, metadata, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Firewall",
      "cons": "Firewall",
      "name": "setMetadata",
      "string": "Firewall.prototype.setMetadata()"
    }
  },
  {
    "tags": [
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{string} method - Action.",
        "name": "method",
        "description": "<ul>\n<li>Action.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} path - Request path.",
        "name": "path",
        "description": "<ul>\n<li>Request path.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} query - Request query object.",
        "name": "query",
        "description": "<ul>\n<li>Request query object.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} body - Request body contents.",
        "name": "body",
        "description": "<ul>\n<li>Request body contents.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "summary": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 174,
    "codeStart": 186,
    "code": "Firewall.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/global/firewalls/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Firewall;",
    "ctx": {
      "type": "method",
      "constructor": "Firewall",
      "cons": "Firewall",
      "name": "makeReq_",
      "string": "Firewall.prototype.makeReq_()"
    }
  }
]