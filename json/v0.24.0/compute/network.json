[
  {
    "tags": [],
    "description": {
      "full": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p><p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>",
      "summary": "<p>Copyright 2015 Google Inc. All Rights Reserved.</p>",
      "body": "<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at</p><pre><code> http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 1,
    "codeStart": 16
  },
  {
    "tags": [
      {
        "type": "module",
        "string": "compute/network",
        "html": "<p>compute/network</p>"
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 17,
    "codeStart": 21,
    "code": "'use strict';\n\nvar extend = require('extend');\nvar format = require('string-format-obj');\nvar is = require('is');",
    "ctx": false
  },
  {
    "tags": [
      {
        "type": "type",
        "string": "{module:common/util}",
        "types": [
          "module:common/util"
        ],
        "typesDescription": "module:<a href=\"module%3Acommon%2Futil.html\">common/util</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "html": "<p>{module:common/util}</p>"
      },
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      }
    ],
    "description": {
      "full": "",
      "summary": "",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 27,
    "codeStart": 31,
    "code": "var util = require('../common/util.js');",
    "ctx": {
      "type": "declaration",
      "name": "util",
      "value": "require('../common/util.js')",
      "string": "util"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "string": "{module:compute} compute - The Compute module this network belongs to.",
        "name": "compute",
        "description": "<ul>\n<li>The Compute module this network belongs to.</li>\n</ul>\n",
        "types": [
          "module:compute"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute.html\">compute</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} name - Network name.",
        "name": "name",
        "description": "<ul>\n<li>Network name.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Developer Documentation</p>",
      "summary": "<p>Developer Documentation</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": true,
    "line": 33,
    "codeStart": 38
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Networks Overview]{@link https://cloud.google.com/compute/docs/networking#networks}",
        "html": "<p>[Networks Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#networks}\">https://cloud.google.com/compute/docs/networking#networks}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Network Resource]{@link https://cloud.google.com/compute/docs/reference/v1/networks}",
        "html": "<p>[Network Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks}\">https://cloud.google.com/compute/docs/reference/v1/networks}</a></p>"
      },
      {
        "type": "constructor",
        "string": "",
        "html": ""
      },
      {
        "type": "alias",
        "string": "module:compute/network",
        "html": "<p>module:compute/network</p>"
      },
      {
        "type": "example",
        "string": "var gcloud = require('gcloud')({\n  keyFilename: '/path/to/keyfile.json',\n  projectId: 'grape-spaceship-123'\n});\n\nvar gce = gcloud.compute();\n\nvar network = gce.network('network-name');",
        "html": "<p>var gcloud = require(&#39;gcloud&#39;)({<br />  keyFilename: &#39;/path/to/keyfile.json&#39;,<br />  projectId: &#39;grape-spaceship-123&#39;<br />});</p><p>var gce = gcloud.compute();</p><p>var network = gce.network(&#39;network-name&#39;);</p>"
      }
    ],
    "description": {
      "full": "<p>A Network object allows you to interact with a Google Compute Engine network.</p>",
      "summary": "<p>A Network object allows you to interact with a Google Compute Engine network.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 38,
    "codeStart": 57,
    "code": "function Network(compute, name) {\n  this.compute = compute;\n  this.name = name;\n  this.metadata = {};\n\n  this.formattedName = Network.formatName_(compute, name);\n}",
    "ctx": {
      "type": "constructor",
      "name": "Network",
      "string": "Network()"
    }
  },
  {
    "tags": [
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{module:compute} compute - The Compute object this network belongs to.",
        "name": "compute",
        "description": "<ul>\n<li>The Compute object this network belongs to.</li>\n</ul>\n",
        "types": [
          "module:compute"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute.html\">compute</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} name - The name of the network.",
        "name": "name",
        "description": "<ul>\n<li>The name of the network.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "return",
        "string": "{string} - The formatted name.",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false,
        "description": "<ul>\n<li>The formatted name.</li>\n</ul>\n"
      }
    ],
    "description": {
      "full": "<p>Format a network&#39;s name how the API expects.</p>",
      "summary": "<p>Format a network&#39;s name how the API expects.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 65,
    "codeStart": 74,
    "code": "Network.formatName_ = function(compute, name) {\n  return format('projects/{projectId}/global/networks/{name}', {\n    projectId: compute.projectId,\n    name: name\n  });\n};",
    "ctx": {
      "type": "method",
      "receiver": "Network",
      "name": "formatName_",
      "string": "Network.formatName_()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}",
        "html": "<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Firewalls: insert API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}",
        "html": "<p>[Firewalls: insert API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/insert}</a></p>"
      },
      {
        "type": "param",
        "string": "{string} name - Name of the firewall.",
        "name": "name",
        "description": "<ul>\n<li>Name of the firewall.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} config - See a\n    [Firewall resource](https://cloud.google.com/compute/docs/reference/v1/firewalls#resource).",
        "name": "config",
        "description": "<ul>\n<li>See a     <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls#resource\">Firewall resource</a>.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} config.protocols - A map of protocol to port range. The keys\n    of the object refer to a protocol (e.g. `tcp`, `udp`) and the value for\n    the key are the ports/port-ranges that are allowed to make a connection.",
        "name": "config.protocols",
        "description": "<ul>\n<li>A map of protocol to port range. The keys     of the object refer to a protocol (e.g. <code>tcp</code>, <code>udp</code>) and the value for<br />  the key are the ports/port-ranges that are allowed to make a connection.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string[]} config.ranges - The IP address blocks that this rule\n    applies to, expressed in\n    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\n    format.",
        "name": "config.ranges",
        "description": "<ul>\n<li>The IP address blocks that this rule     applies to, expressed in<br />  <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a><br />  format.</li>\n</ul>\n",
        "types": [
          "Array.<string>"
        ],
        "typesDescription": "<code>Array</code>.&lt;<code>string</code>&gt;",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/firewall} callback.firewall - The created Firewall\n    object.",
        "name": "callback.firewall",
        "description": "<ul>\n<li>The created Firewall     object.</li>\n</ul>\n",
        "types": [
          "module:compute/firewall"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.",
        "name": "callback.operation",
        "description": "<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n",
        "types": [
          "module:compute/operation"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var config = {\n  protocols: {\n    tcp: [3000],\n    udp: [] // An empty array means all ports are allowed.\n  },\n\n  ranges: ['0.0.0.0/0']\n};\n\nfunction callback(err, firewall, operation, apiResponse) {\n  // `firewall` is a Firewall object.\n\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n}\n\nnetwork.createFirewall('new-firewall-name', config, callback);",
        "html": "<p>var config = {<br />  protocols: {<br />    tcp: [3000],<br />    udp: [] // An empty array means all ports are allowed.<br />  },</p><p>  ranges: [&#39;0.0.0.0/0&#39;]<br />};</p><p>function callback(err, firewall, operation, apiResponse) {<br />  // <code>firewall</code> is a Firewall object.</p><p>  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />}</p><p>network.createFirewall(&#39;new-firewall-name&#39;, config, callback);</p>"
      }
    ],
    "description": {
      "full": "<p>Create a firewall for this network.</p>",
      "summary": "<p>Create a firewall for this network.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 81,
    "codeStart": 124,
    "code": "Network.prototype.createFirewall = function(name, config, callback) {\n  config = extend({}, config, {\n    network: this.formattedName\n  });\n\n  this.compute.createFirewall(name, config, callback);\n};",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "createFirewall",
      "string": "Network.prototype.createFirewall()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Networks: delete API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/delete}",
        "html": "<p>[Networks: delete API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/delete}\">https://cloud.google.com/compute/docs/reference/v1/networks/delete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/operation} callback.operation - An operation object\n    that can be used to check the status of the request.",
        "name": "callback.operation",
        "description": "<ul>\n<li>An operation object     that can be used to check the status of the request.</li>\n</ul>\n",
        "types": [
          "module:compute/operation"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Foperation.html\">compute/operation</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "network.delete(function(err, operation, apiResponse) {\n  // `operation` is an Operation object that can be used to check the status\n  // of the request.\n});",
        "html": "<p>network.delete(function(err, operation, apiResponse) {<br />  // <code>operation</code> is an Operation object that can be used to check the status<br />  // of the request.<br />});</p>"
      }
    ],
    "description": {
      "full": "<p>Delete the network.</p>",
      "summary": "<p>Delete the network.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 132,
    "codeStart": 149,
    "code": "Network.prototype.delete = function(callback) {\n  var compute = this.compute;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('DELETE', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    var operation = compute.operation(resp.name);\n    operation.metadata = resp;\n\n    callback(null, operation, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "delete",
      "string": "Network.prototype.delete()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}",
        "html": "<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"
      },
      {
        "type": "param",
        "string": "{string} name - Name of the existing firewall.",
        "name": "name",
        "description": "<ul>\n<li>Name of the existing firewall.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "var firewall = network.firewall('firewall-name');",
        "html": "<p>var firewall = network.firewall(&#39;firewall-name&#39;);</p>"
      }
    ],
    "description": {
      "full": "<p>Get a reference to a Google Compute Engine firewall in this network.</p>",
      "summary": "<p>Get a reference to a Google Compute Engine firewall in this network.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 167,
    "codeStart": 177,
    "code": "Network.prototype.firewall = function(name) {\n  var firewall = this.compute.firewall(name);\n\n  firewall.metadata = {\n    network: this.formattedName\n  };\n\n  return firewall;\n};",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "firewall",
      "string": "Network.prototype.firewall()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Firewalls Overview]{@link https://cloud.google.com/compute/docs/networking#firewalls}",
        "html": "<p>[Firewalls Overview]{@link <a href=\"https://cloud.google.com/compute/docs/networking#firewalls}\">https://cloud.google.com/compute/docs/networking#firewalls}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Firewalls: list API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/firewalls/list}",
        "html": "<p>[Firewalls: list API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/firewalls/list}\">https://cloud.google.com/compute/docs/reference/v1/firewalls/list}</a></p>"
      },
      {
        "type": "param",
        "string": "{object=} options - Firewall search options.",
        "name": "options",
        "description": "<ul>\n<li>Firewall search options.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{boolean} options.autoPaginate - Have pagination handled\n    automatically. Default: true.",
        "name": "options.autoPaginate",
        "description": "<ul>\n<li>Have pagination handled     automatically. Default: true.</li>\n</ul>\n",
        "types": [
          "boolean"
        ],
        "typesDescription": "<code>boolean</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{number} options.maxResults - Maximum number of firewalls to return.",
        "name": "options.maxResults",
        "description": "<ul>\n<li>Maximum number of firewalls to return.</li>\n</ul>\n",
        "types": [
          "number"
        ],
        "typesDescription": "<code>number</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} options.pageToken - A previously-returned page token\n    representing part of the larger set of results to view.",
        "name": "options.pageToken",
        "description": "<ul>\n<li>A previously-returned page token     representing part of the larger set of results to view.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{module:compute/firewall} callback.firewalls - Firewall objects from\n    this network.",
        "name": "callback.firewalls",
        "description": "<ul>\n<li>Firewall objects from     this network.</li>\n</ul>\n",
        "types": [
          "module:compute/firewall"
        ],
        "typesDescription": "module:<a href=\"module%3Acompute%2Ffirewall.html\">compute/firewall</a>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?object} callback.nextQuery - If present, query with this object to\n    check for more results.",
        "name": "callback.nextQuery",
        "description": "<ul>\n<li>If present, query with this object to     check for more results.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "network.getFirewalls(function(err, firewalls) {\n  // `firewalls` is an array of `Firewall` objects.\n});\n\n//-\n// To control how many API requests are made and page through the results\n// manually, set `autoPaginate` to `false`.\n//-\nfunction callback(err, firewalls, nextQuery, apiResponse) {\n  if (nextQuery) {\n    // More results exist.\n    network.getFirewalls(nextQuery, callback);\n  }\n}\n\nnetwork.getFirewalls({\n  autoPaginate: false\n}, callback);\n\n//-\n// Get the firewalls from your project as a readable object stream.\n//-\nnetwork.getFirewalls()\n  .on('error', console.error)\n  .on('data', function(firewall) {\n    // `firewall` is a `Firewall` object.\n  })\n  .on('end', function() {\n    // All firewalls retrieved.\n  });\n\n//-\n// If you anticipate many results, you can end a stream early to prevent\n// unnecessary processing and API requests.\n//-\nnetwork.getFirewalls()\n  .on('data', function(firewall) {\n    this.end();\n  });",
        "html": "<p>network.getFirewalls(function(err, firewalls) {<br />  // <code>firewalls</code> is an array of <code>Firewall</code> objects.<br />});</p><p>//-<br />// To control how many API requests are made and page through the results<br />// manually, set <code>autoPaginate</code> to <code>false</code>.<br />//-<br />function callback(err, firewalls, nextQuery, apiResponse) {<br />  if (nextQuery) {<br />    // More results exist.<br />    network.getFirewalls(nextQuery, callback);<br />  }<br />}</p><p>network.getFirewalls({<br />  autoPaginate: false<br />}, callback);</p><p>//-<br />// Get the firewalls from your project as a readable object stream.<br />//-<br />network.getFirewalls()<br />  .on(&#39;error&#39;, console.error)<br />  .on(&#39;data&#39;, function(firewall) {<br />    // <code>firewall</code> is a <code>Firewall</code> object.<br />  })<br />  .on(&#39;end&#39;, function() {<br />    // All firewalls retrieved.<br />  });</p><p>//-<br />// If you anticipate many results, you can end a stream early to prevent<br />// unnecessary processing and API requests.<br />//-<br />network.getFirewalls()<br />  .on(&#39;data&#39;, function(firewall) {<br />    this.end();<br />  });</p>"
      }
    ],
    "description": {
      "full": "<p>Get a list of firewalls for this network.</p>",
      "summary": "<p>Get a list of firewalls for this network.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 187,
    "codeStart": 248,
    "code": "Network.prototype.getFirewalls = function(options, callback) {\n  if (is.fn(options)) {\n    callback = options;\n    options = {};\n  }\n\n  options = extend({}, options, {\n    filter: 'network eq .*' + this.formattedName\n  });\n\n  return this.compute.getFirewalls(options, callback);\n};",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "getFirewalls",
      "string": "Network.prototype.getFirewalls()"
    }
  },
  {
    "tags": [
      {
        "type": "resource",
        "string": "[Network Resource]{@link https://cloud.google.com/compute/docs/reference/v1/networks}",
        "html": "<p>[Network Resource]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks}\">https://cloud.google.com/compute/docs/reference/v1/networks}</a></p>"
      },
      {
        "type": "resource",
        "string": "[Networks: get API Documentation]{@link https://cloud.google.com/compute/docs/reference/v1/networks/delete}",
        "html": "<p>[Networks: get API Documentation]{@link <a href=\"https://cloud.google.com/compute/docs/reference/v1/networks/delete}\">https://cloud.google.com/compute/docs/reference/v1/networks/delete}</a></p>"
      },
      {
        "type": "param",
        "string": "{function=} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>|<code>undefined</code>",
        "optional": true,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{?error} callback.err - An error returned while making this request.",
        "name": "callback.err",
        "description": "<ul>\n<li>An error returned while making this request.</li>\n</ul>\n",
        "types": [
          "error"
        ],
        "typesDescription": "<code>error</code>|<code>null</code>",
        "optional": false,
        "nullable": true,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.metadata - The network's metadata.",
        "name": "callback.metadata",
        "description": "<ul>\n<li>The network&#39;s metadata.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{object} callback.apiResponse - The full API response.",
        "name": "callback.apiResponse",
        "description": "<ul>\n<li>The full API response.</li>\n</ul>\n",
        "types": [
          "object"
        ],
        "typesDescription": "<code>object</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "example",
        "string": "network.getMetadata(function(err, metadata, apiResponse) {});",
        "html": "<p>network.getMetadata(function(err, metadata, apiResponse) {});</p>"
      }
    ],
    "description": {
      "full": "<p>Get the network&#39;s metadata.</p>",
      "summary": "<p>Get the network&#39;s metadata.</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 261,
    "codeStart": 275,
    "code": "Network.prototype.getMetadata = function(callback) {\n  var self = this;\n\n  callback = callback || util.noop;\n\n  this.makeReq_('GET', '', null, null, function(err, resp) {\n    if (err) {\n      callback(err, null, resp);\n      return;\n    }\n\n    self.metadata = resp;\n\n    callback(null, self.metadata, resp);\n  });\n};",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "getMetadata",
      "string": "Network.prototype.getMetadata()"
    }
  },
  {
    "tags": [
      {
        "type": "private",
        "string": "",
        "visibility": "private",
        "html": ""
      },
      {
        "type": "param",
        "string": "{string} method - Action.",
        "name": "method",
        "description": "<ul>\n<li>Action.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{string} path - Request path.",
        "name": "path",
        "description": "<ul>\n<li>Request path.</li>\n</ul>\n",
        "types": [
          "string"
        ],
        "typesDescription": "<code>string</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} query - Request query object.",
        "name": "query",
        "description": "<ul>\n<li>Request query object.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{*} body - Request body contents.",
        "name": "body",
        "description": "<ul>\n<li>Request body contents.</li>\n</ul>\n",
        "types": [],
        "typesDescription": "<code>*</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      },
      {
        "type": "param",
        "string": "{function} callback - The callback function.",
        "name": "callback",
        "description": "<ul>\n<li>The callback function.</li>\n</ul>\n",
        "types": [
          "function"
        ],
        "typesDescription": "<code>function</code>",
        "optional": false,
        "nullable": false,
        "nonNullable": false,
        "variable": false
      }
    ],
    "description": {
      "full": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "summary": "<p>Make a new request object from the provided arguments and wrap the callback<br />to intercept non-successful responses.</p>",
      "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isClass": false,
    "isEvent": false,
    "ignore": false,
    "line": 292,
    "codeStart": 304,
    "code": "Network.prototype.makeReq_ = function(method, path, query, body, callback) {\n  path = '/global/networks/' + this.name + path;\n  this.compute.makeReq_(method, path, query, body, callback);\n};\n\nmodule.exports = Network;",
    "ctx": {
      "type": "method",
      "constructor": "Network",
      "cons": "Network",
      "name": "makeReq_",
      "string": "Network.prototype.makeReq_()"
    }
  }
]