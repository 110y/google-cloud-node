{"id":"error-reporting","type":"class","name":"Errors","overview":"<p>\n  This class allows you interact with Error Reporting.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/error-reporting</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/error-reporting</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/error-reporting</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar errors = require('@google-cloud/error-reporting')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar errors = require('@google-cloud/error-reporting')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/error-reporting</code> are outlined in our <a href=\"#/docs/error-reporting//guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages/error-reporting/src/index.js","parent":null,"children":["error-reporting/classes","error-reporting/configuration","error-reporting/error-extractors","error-reporting/error-handlers","error-reporting/error-router","error-reporting/google-apis","error-reporting/interfaces","error-reporting/logger","error-reporting/request-extractors"],"methods":[{"id":"Errors","name":"Errors","type":"constructor","description":"<p>The entry point for initializing the Error Reporting Middleware. This function will invoke configuration gathering and attempt to create a API client which will send errors to the Error Reporting Service. Invocation of this function will also return an interface which can be used manually via the <code>report</code> function property, with hapi via the <code>hapi</code> object property or with express via the <code>express</code> function property.</p>","source":"packages/error-reporting/src/index.js#L78","resources":[],"examples":[],"params":[{"name":"initConfiguration","description":"<ul> <li>the desired project/error reporting configuration</li> </ul> ","types":["ConfigurationOptions"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"report","name":"report","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L98","resources":[],"examples":[{"code":"// Use to report errors manually like so\nerrors.report(new Error('xyz'), function () {\n console.log('done!');\n});"}],"params":[],"exceptions":[],"returns":[]},{"id":"event","name":"event","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L110","resources":[],"examples":[{"code":"// Use to create and report errors manually with a high-degree\n// of manual control\nvar err = errors.event()\n .setMessage('My error message')\n .setUser('root@nexus');\nerrors.report(err, function () {\n console.log('done!');\n});"}],"params":[],"exceptions":[],"returns":[]},{"id":"hapi","name":"hapi","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L120","resources":[],"examples":[{"code":"var hapi = require('hapi');\nvar server = new hapi.Server();\nserver.connection({ port: 3000 });\nserver.start();\n// AFTER ALL OTHER ROUTE HANDLERS\nserver.register({register: errors.hapi});"}],"params":[],"exceptions":[],"returns":[]},{"id":"express","name":"express","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L129","resources":[],"examples":[{"code":"var express = require('express');\nvar app = express();\n// AFTER ALL OTHER ROUTE HANDLERS\napp.use(errors.express);\napp.listen(3000);"}],"params":[],"exceptions":[],"returns":[]},{"id":"restify","name":"restify","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L137","resources":[],"examples":[{"code":"var restify = require('restify');\nvar server = restify.createServer();\n// BEFORE ALL OTHER ROUTE HANDLERS\nserver.use(errors.restify(server));"}],"params":[],"exceptions":[],"returns":[]},{"id":"koa","name":"koa","type":"instance","description":"","source":"packages/error-reporting/src/index.js#L145","resources":[],"examples":[{"code":"var koa = require('koa');\nvar app = koa();\n// BEFORE ALL OTHER ROUTE HANDLERS HANDLERS\napp.use(errors.koa);"}],"params":[],"exceptions":[],"returns":[]}],"path":"index.json"}